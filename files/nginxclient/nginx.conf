user  nginx;

# set worker_processes to be equal to the number of CPUs or cores
  worker_processes  1;

  error_log  logs/error.log;
# pid        logs/nginx.pid;

events {
# The worker_processes and worker_connections from the event sections allows you to calculate maxclients value:
# max_clients = worker_processes * worker_connections

  worker_connections  1024;
}


http {
    include       mime.types;
    default_type  application/octet-stream;
    gzip  on;
    gzip_min_length 5000;
    gzip_buffers 4 8k;
    gzip_types text/plain text/css application/x-javascript text/xml application/xml application/xml+rss text/javascript;
# syntax:
# gzip_proxied [off|expired|no-cache|no-store|private|no_last_modified|no_etag|auth|any]
    gzip_proxied any;
    gzip_disable "MSIE [1-6]\.";
    gzip_comp_level 2;
    ignore_invalid_headers on;

#
    client_body_buffer_size 8k;
    client_header_timeout 60; # parameter in seconds
    client_body_timeout 60;
    client_max_body_size 15M;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"'
                      '"$connection" "$request_time"'
                      '"$uid_got,$uid_set"'
                      '"variable:",$binary_remote_addr","$body_bytes_sent","$document_uri","$host","$request_uri","$remote_addr2","$request_filename"';
     access_log  logs/access.log  main;
  #  access_log  logs/access.log  main  buffer=12k;
  # open_log_file_cache max=1000 inactive=20s min_uses=2 valid=1m;

    sendfile        on;
    #tcp_nopush     on;
    keepalive_timeout  60;
#

#  using http_limit_conn module
#
# 1.syntax:     limit_conn zone number;
#  default:      -
#  context:     http, server, location
#
# 2.syntax:     limit_conn_zone $variable zone=name:size;
#   default:    -
#   context:    http
# 3.syntax:     limit_zone name $variable size;
#  This directive is made obsolete in version 1.1.8, an equivalent limit_conn_zone directive with a changed syntax should be used instead
#   default:    -
#   context:    http
# practice below:
  limit_conn_zone $binary_remote_addr zone=perip:10m;
  limit_conn_zone $server_name zone=perserver:10m;
  limit_req_zone $binary_remote_addr zone=one:10m rate=40r/s;


# autoindex,autoindex_exact_siz,autoindex_localtime context: http, server, location

  autoindex on;
  autoindex_exact_size off;
  autoindex_localtime on;

# HttpUserIdModule his module is compatible with mod_uid for Apache
  userid          on;
  userid_name     uid;
  userid_domain   joy.com;
  userid_path     /;
  userid_expires  365d;
  userid_p3p      'policyref="/w3c/p3p.xml", CP="CUR ADM OUR NOR STA NID"';
############virtaul host define
  server {
        listen       80;
        server_name  -;
        root /usr/local/nginx/html;
        ssi on;
        index  index.php index.html index.htm;
   }

   server {

        rewrite ^/download/index2.php$ /download/index3.php permanent;
        if ($server_port ~ "80"){
           set $rule_0 1$rule_0;
        }
        if ($uri ~ "^/sina/?"){
           set $rule_0 2$rule_0;
        }
        if ($rule_0 = "21"){
           rewrite ^(.+)$ $scheme://www.sina.com.cn/ redirect;
           break;
         }
        if ($cookie_env ~* "testing") {
          rewrite ^(.*)$ /index2.php;
        }
        if ($http_user_agent ~* Chrome) {
         set $remote_addr2  "yahoo.com.cn";
        }
        listen       80;
        server_name  cnetos6.joy.com  web2.joy.com *.joy.com;
        root   /usr/local/nginx/html;
        charset UTF-8;
        limit_conn perip 3;
        limit_req zone=one burst=500 nodelay;

       location / {
         index  index.php index.html index.htm;
         random_index off;
         try_files $uri $uri/ /index?q=$uri&$args;
       }
       location /status {
           stub_status on;
           access_log off;
           auth_basic "Restricted";
           auth_basic_user_file /usr/local/nginx/conf/auth_nginx;
       }
       location = /_.gif {
           empty_gif;
       }
       location = /robots.txt {
          log_not_found off;
       }
#####
       location ~* ^.+\.(jpg|jpeg|gif|png|swf|rar|zip|css|js)$ {
           valid_referers none blocked centos6.joy.com;
           if ($invalid_referer) {
            rewrite (.*) http://web2.joy.com/test.gif;
           #return 404;
           }
           access_log off;
           expires 1h;
           break;
       }
        error_page  404   /404.html;

        # redirect server error pages to the static page /50x.html
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   html;
        }

        # proxy the PHP scripts to Apache listening on 127.0.0.1:80
        #
        #location ~ \.php$ {
        #    proxy_pass   http://127.0.0.1;
        #}

        # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000

        location ~ \.php$ {
            fastcgi_pass   127.0.0.1:9000;
            fastcgi_index  index.php;
            fastcgi_param  SCRIPT_FILENAME  $document_root$fastcgi_script_name;
            include        fastcgi_params;
        }
        location ~ \.flv$ {
            flv;
        }
        # deny access to .htaccess files, if Apache's document root
        # concurs with nginx's one
        #
        #location ~ /\.ht {
        #    deny  all;
        #}
    }


    # another virtual host using mix of IP-, name-, and port-based configuration
    #
    #server {
    #    listen       8000;
    #    listen       somename:8080;
    #    server_name  somename  another.alias;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}

    # HTTPS server
    #
    #server {
    #    listen       443;
    #    server_name  localhost;

    #    ssl                  on;
    #    ssl_certificate      cert.pem;
    #    ssl_certificate_key  cert.key;

    #    ssl_session_timeout  5m;

    #    ssl_protocols  SSLv2 SSLv3 TLSv1;
    #    ssl_ciphers  HIGH:!aNULL:!MD5;
    #    ssl_prefer_server_ciphers   on;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}

include conf.d/*.conf;
}
